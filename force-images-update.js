#!/usr/bin/env node

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */

const https = require('https')
const crypto = require('crypto')

const SERVER_HOST = 'venorus.com'
const WEBHOOK_PATH = '/api/webhook/github'
const WEBHOOK_SECRET = 'your-webhook-secret'

// –°–æ–∑–¥–∞–µ–º payload —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const forceImageUpdatePayload = {
  ref: 'refs/heads/main',
  forced: true,
  head_commit: {
    id: 'bb66cba196ce47da0819e6e80a0622d29fd76c98',
    message: 'Force update: fix image display on production server (hero.png, logos)',
    author: {
      name: 'Claude Code Image Fix',
      email: 'noreply@anthropic.com'
    },
    modified: [
      'public/hero.png',
      'public/Logo-main.webp', 
      'public/logo.webp',
      'public/.gitignore',
      'middleware.ts',
      'app/layout.tsx'
    ]
  },
  repository: {
    name: 'venorus.com',
    full_name: 'venorus/venorus.com',
    html_url: 'https://github.com/venorus/venorus.com'
  }
}

function createSignature(payload, secret) {
  return 'sha256=' + crypto
    .createHmac('sha256', secret)
    .update(payload)
    .digest('hex')
}

function sendForceUpdate() {
  const payloadString = JSON.stringify(forceImageUpdatePayload)
  const signature = createSignature(payloadString, WEBHOOK_SECRET)
  
  const options = {
    hostname: SERVER_HOST,
    port: 443,
    path: WEBHOOK_PATH,
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': payloadString.length,
      'X-Hub-Signature-256': signature,
      'X-GitHub-Event': 'push',
      'User-Agent': 'GitHub-Hookshot/image-fix'
    },
    rejectUnauthorized: false
  }

  console.log('üñºÔ∏è  –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô')
  console.log('=' * 50)
  console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è hero.png –∏ –ª–æ–≥–æ—Ç–∏–ø–æ–≤...')
  console.log(`URL: https://${SERVER_HOST}${WEBHOOK_PATH}`)

  const req = https.request(options, (res) => {
    let data = ''
    
    console.log(`üìä HTTP —Å—Ç–∞—Ç—É—Å: ${res.statusCode}`)
    
    res.on('data', (chunk) => {
      data += chunk
    })
    
    res.on('end', () => {
      console.log('üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:')
      try {
        const response = JSON.parse(data)
        console.log(JSON.stringify(response, null, 2))
        
        if (res.statusCode === 200) {
          console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
          console.log('‚è≥ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ...')
          console.log('')
          console.log('üìã –û–∂–∏–¥–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:')
          console.log('  - hero.png –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º')
          console.log('  - Logo.webp –¥–æ–ª–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–∞ logo.webp')  
          console.log('  - dark_logo.webp –¥–æ–ª–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–∞ logo.webp')
          console.log('')
          console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã:')
          console.log('  https://venorus.com/hero.png')
          console.log('  https://venorus.com/Logo.webp')
          console.log('  https://venorus.com/logo.webp')
        } else {
          console.log('‚ùå –û—à–∏–±–∫–∞ webhook:', response)
        }
      } catch (e) {
        console.log('üìÑ Raw –æ—Ç–≤–µ—Ç:', data)
      }
    })
  })

  req.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook:', error.message)
  })

  req.write(payloadString)
  req.end()
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
sendForceUpdate()