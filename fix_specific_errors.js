#!/usr/bin/env node

const fs = require('fs');

// –ò—Å–ø—Ä–∞–≤–∏—Ç—å sql-table/[table]/route.ts
try {
  const filePath = 'app/api/sql-table/[table]/route.ts';
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –ó–∞–º–µ–Ω–∏—Ç—å params.table –Ω–∞ resolvedParams.table
  content = content.replace(/params\.table/g, 'resolvedParams.table');
  
  // –î–æ–±–∞–≤–∏—Ç—å const resolvedParams = await params –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
  if (!content.includes('resolvedParams = await params')) {
    content = content.replace(
      /(try\s*\{[^}]*?)(\s+if\s*\([^)]*resolvedParams\.table)/,
      '$1\n    const resolvedParams = await params$2'
    );
  }
  
  fs.writeFileSync(filePath, content, 'utf8');
  console.log('‚úÖ Fixed sql-table/[table]/route.ts');
} catch (error) {
  console.error('‚ùå Error fixing sql-table:', error.message);
}

// –ò—Å–ø—Ä–∞–≤–∏—Ç—å variants/[id]/tags/route.ts
try {
  const filePath = 'app/api/variants/[id]/tags/route.ts';
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –ù–∞–π—Ç–∏ –º–µ—Å—Ç–æ –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è resolvedParams.id –±–µ–∑ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  const lines = content.split('\n');
  let functionStart = -1;
  let needsAwait = -1;
  
  for (let i = 0; i < lines.length; i++) {
    if (lines[i].includes('export async function') && lines[i].includes('params')) {
      functionStart = i;
    }
    if (lines[i].includes('resolvedParams.id') && functionStart > -1) {
      needsAwait = i;
      break;
    }
  }
  
  if (needsAwait > -1 && functionStart > -1) {
    // –ù–∞–π—Ç–∏ –Ω–∞—á–∞–ª–æ try –±–ª–æ–∫–∞ –ø–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
    for (let i = functionStart; i < needsAwait; i++) {
      if (lines[i].includes('try {')) {
        const indent = lines[i].match(/^(\s*)/)[1];
        lines.splice(i + 1, 0, `${indent}  const resolvedParams = await params`);
        break;
      }
    }
  }
  
  content = lines.join('\n');
  fs.writeFileSync(filePath, content, 'utf8');
  console.log('‚úÖ Fixed variants/[id]/tags/route.ts');
} catch (error) {
  console.error('‚ùå Error fixing variants/tags:', error.message);
}

// –ò—Å–ø—Ä–∞–≤–∏—Ç—å warehouse/sections/[id]/route.ts
try {
  const filePath = 'app/api/warehouse/sections/[id]/route.ts';
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –ó–∞–º–µ–Ω–∏—Ç—å params.id –Ω–∞ resolvedParams.id
  content = content.replace(/params\.id/g, 'resolvedParams.id');
  
  // –î–æ–±–∞–≤–∏—Ç—å await params –≤ –∫–∞–∂–¥—É—é —Ñ—É–Ω–∫—Ü–∏—é
  content = content.replace(
    /(export async function \w+\([^)]+\) \{\s*try \{)/g,
    '$1\n    const resolvedParams = await params'
  );
  
  fs.writeFileSync(filePath, content, 'utf8');
  console.log('‚úÖ Fixed warehouse/sections/[id]/route.ts');
} catch (error) {
  console.error('‚ùå Error fixing warehouse/sections:', error.message);
}

console.log('üéâ Specific fixes complete!');