#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–∞–π—Ç–∞
 * –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Å—Ç –≤–µ—Å—å —Å–∞–π—Ç!
 */

const https = require('https')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CLEAN_DEPLOY_URL = 'https://venorus.net/api/deploy/clean'
const CLEAN_DEPLOY_TOKEN = 'clean-deploy-secret-2024'

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
const options = {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${CLEAN_DEPLOY_TOKEN}`,
    'User-Agent': 'Clean-Deploy-Trigger/1.0'
  }
}

console.log('üßπ ===== –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –û–ß–ò–°–¢–ö–ò –ò –ü–ï–†–ï–†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø =====')
console.log(`URL: ${CLEAN_DEPLOY_URL}`)
console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç —Ç–µ–∫—É—â–∏–π —Å–∞–π—Ç –∏ —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π!')
console.log('üì¶ –ë—É–¥–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ –Ω–∞—à–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏')

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É
const req = https.request(CLEAN_DEPLOY_URL, options, (res) => {
  console.log(`\n‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: ${res.statusCode} ${res.statusMessage}`)
  
  let data = ''
  res.on('data', (chunk) => {
    data += chunk
  })
  
  res.on('end', () => {
    try {
      const response = JSON.parse(data)
      console.log('üì¶ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(response, null, 2))
      
      if (res.statusCode === 200) {
        console.log('üéâ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω—ã!')
        console.log('‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç 5-10 –º–∏–Ω—É—Ç. –°–∞–π—Ç –±—É–¥–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.')
        console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ—á–∏—Å—Ç–∫–∏')
      }
    } catch (e) {
      console.log('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (raw):', data)
    }
  })
})

req.on('error', (e) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', e.message)
})

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
req.end()

console.log('‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É...')